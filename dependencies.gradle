def config = [
        compileSdkVersion : 29,
        buildToolsVersion : "29.0.0",
        minSdkVersion     : 21,
        targetSdkVersion  : 29,
        versionCode       : 1,
        versionName       : "1.0"
]
ext.config = config

ext.deps = [:]

def versions = [
        kotlin           : "1.3.50",
        gradle           : "4.0.0-alpha01",
        appcompat        : "1.1.0-alpha03",
        recyclerview     : "1.1.0-beta01",
        constraintlayout : "2.0.0-alpha4",
        ktx              : "1.2.0-alpha02",
        test             : "1.3.0-alpha02",
        lifecycle        : "2.2.0-alpha02",
        koin             : "2.0.1",
        kotlinTest       : "3.4.2",
        junit            : "1.1.0",
        hamkrest         : "1.7.0.0",
        retrofit2        : "2.6.1",
        okhttp3          : "4.2.0",
        gson             : "2.8.5",
        material         : "1.1.0-alpha10",
        ted              : "2.2.2",
        skeleton         : "1.1.2",
        shimmerlayout    : "2.1.0",
        dagger           : "2.25.2",
        navigation       : "2.1.0"
]

def kotlin = [
        gradlePlugin : "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
        stdlibJdk8   : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$versions.kotlin"
]
deps.kotlin = kotlin

def build = [
        gradle : "com.android.tools.build:gradle:$versions.gradle"
]
deps.build = build

def androidx = [
        appcompat        : "androidx.appcompat:appcompat:$versions.appcompat",
        ktx              : "androidx.core:core-ktx:$versions.ktx",
        recyclerview     : "androidx.recyclerview:recyclerview:$versions.recyclerview",
        constraintlayout : "androidx.constraintlayout:constraintlayout:$versions.constraintlayout"
]
deps.androidx = androidx

def navigation = [
        fragment : "androidx.navigation:navigation-fragment-ktx:$versions.navigation",
        ui       : "androidx.navigation:navigation-ui-ktx:$versions.navigation"
]
deps.navigation = navigation

def lifecycle = [
        compiler     : "androidx.lifecycle:lifecycle-compiler:$versions.lifecycle",
        viewModelKtx : "androidx.lifecycle:lifecycle-viewmodel-ktx:$versions.lifecycle"
]
deps.lifecycle = lifecycle

def koin = [
        coreExt    : "org.koin:koin-core-ext:$versions.koin",
        scope      : "org.koin:koin-androidx-scope:$versions.koin",
        viewmodel  : "org.koin:koin-androidx-viewmodel:$versions.koin",
        androidExt : "org.koin:koin-androidx-ext:$versions.koin",
        test       : "org.koin:koin-test:$versions.koin"
]
deps.koin = koin

def kotlinTest = [
        runner         : "io.kotlintest:kotlintest-runner-junit5:$versions.kotlinTest",
        extensionsKoin : "io.kotlintest:kotlintest-extensions-koin:$versions.kotlinTest"
]
deps.kotlinTest = kotlinTest

def test = [
        junit    : "androidx.test.ext:junit:$versions.junit",
        runner   : "androidx.test:runner:$versions.test",
        hamkrest : "com.natpryce:hamkrest:$versions.hamkrest"
]
deps.test = test


def retrofit2 = [
        retrofit      : "com.squareup.retrofit2:retrofit:$versions.retrofit2",
        gsonConverter : "com.squareup.retrofit2:converter-gson:$versions.retrofit2"
]
deps.retrofit2 = retrofit2

def okhttp3 = [
        okhttp  : "com.squareup.okhttp3:okhttp:$versions.okhttp3",
        logging : "com.squareup.okhttp3:logging-interceptor:$versions.okhttp3"
]
deps.okhttp3 = okhttp3

def gson = [
        gson : "com.google.code.gson:gson:$versions.gson"
]
deps.gson = gson

def material = [
        material : "com.google.android.material:material:$versions.material"
]
deps.material = material

def dagger = [
        "dagger"           : "com.google.dagger:dagger:$versions.dagger",
        "android"          : "com.google.dagger:dagger-android:$versions.dagger",
        "androidSupport"   : "com.google.dagger:dagger-android-support:$versions.dagger",
        "compiler"         : "com.google.dagger:dagger-compiler:$versions.dagger",
        "androidProcessor" : "com.google.dagger:dagger-android-processor:$versions.dagger"
]
deps.dagger = dagger

static def addRepositories(RepositoryHandler repositoryHandler) {
    repositoryHandler.google()
    repositoryHandler.jcenter()
    repositoryHandler.mavenCentral()
    repositoryHandler.maven {
        url 'http://devrepo.kakao.com:8088/nexus/content/groups/public/'
    }
    repositoryHandler.maven {
        url 'https://dl.bintray.com/kotlin/kotlin-eap'
    }
}

ext.addRepositories = this.&addRepositories
